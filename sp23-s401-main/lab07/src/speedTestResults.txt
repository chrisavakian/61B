InsetInOrderSpeedTest:

Enter # strings to insert into the maps: 5
class ULLMap: 0.00 sec
class BSTMap: 0.00 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 2
class ULLMap: 0.00 sec
class BSTMap: 0.00 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 10000
class ULLMap: 0.68 sec
class BSTMap: 0.60 sec
Java's Built-in TreeMap: 0.03 sec
Java's Built-in HashMap: 0.02 sec


Insert RandomSpeedTest:
Enter # strings to insert into the maps: 1
class ULLMap: 0.00 sec
class BSTMap: 0.00 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n)2

Enter # strings to insert into the maps: 2
class ULLMap: 0.00 sec
class BSTMap: 0.00 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 10
class ULLMap: 0.00 sec
class BSTMap: 0.00 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec
Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 10000
class ULLMap: 0.58 sec
class BSTMap: 0.02 sec
Java's Built-in TreeMap: 0.02 sec
Java's Built-in HashMap: 0.02 sec
Would you like to try more timed-tests? (y/n)

I observed ULL Map being the slowest, and for a RandomspeedTest, BSTMap is much faster than ULLMap and just as fast as Tree/Hash Map